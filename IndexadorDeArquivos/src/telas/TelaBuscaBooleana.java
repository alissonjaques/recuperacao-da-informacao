package telas;

import controle.Buscador;
import controle.Indexador;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisson Jaques
 */
public class TelaBuscaBooleana extends javax.swing.JInternalFrame {

    private ArrayList<String> documentosEncontrados;

    /**
     * Creates new form PesquisaBooleana
     */
    public TelaBuscaBooleana() {
        this.setFrameIcon(new ImageIcon("src\\img\\auditoria_32.png"));
        documentosEncontrados = new ArrayList<>();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPDoc = new javax.swing.JPanel();
        jttextoconsulta = new javax.swing.JTextField();
        jlconsultadoc = new javax.swing.JLabel();
        jbconsultar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jldigitepc = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDocumentosRetornados = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Pesquisa Booleana");
        setFont(new java.awt.Font("Aaux ProMedium SC", 0, 18)); // NOI18N

        jttextoconsulta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jttextoconsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jttextoconsultaActionPerformed(evt);
            }
        });

        jlconsultadoc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlconsultadoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlconsultadoc.setText("Consulta de Documentos:");

        jbconsultar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbconsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search.png"))); // NOI18N
        jbconsultar.setText("Consultar");
        jbconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbconsultarActionPerformed(evt);
            }
        });

        jbLimpar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpar-limpo.png"))); // NOI18N
        jbLimpar.setText("Limpar");
        jbLimpar.setEnabled(false);
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jldigitepc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jldigitepc.setText("Digite para consultar:");

        jTDocumentosRetornados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTDocumentosRetornados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Documentos Retornados Pela Busca"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTDocumentosRetornados);

        javax.swing.GroupLayout JPDocLayout = new javax.swing.GroupLayout(JPDoc);
        JPDoc.setLayout(JPDocLayout);
        JPDocLayout.setHorizontalGroup(
            JPDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPDocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(JPDocLayout.createSequentialGroup()
                        .addComponent(jlconsultadoc, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(JPDocLayout.createSequentialGroup()
                        .addComponent(jldigitepc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jttextoconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbconsultar)
                        .addGap(18, 18, 18)
                        .addComponent(jbLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        JPDocLayout.setVerticalGroup(
            JPDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPDocLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jlconsultadoc)
                .addGap(18, 18, 18)
                .addGroup(JPDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jttextoconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jldigitepc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbconsultar)
                    .addComponent(jbLimpar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jttextoconsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jttextoconsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jttextoconsultaActionPerformed

    private void jbconsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbconsultarActionPerformed
        if (getJttextoconsulta().getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo vazio, favor preencher uma consulta válida.", "Mensagem de Erro", JOptionPane.ERROR_MESSAGE);
            limparTabela();
        } else {
            limparTabela();
            File diretorioIndice = new File("src\\indice");
            if (diretorioIndice.isDirectory() && diretorioIndice.list().length == 0) {
                //LOGGER.info("Directory is empty");            
                Indexador indexador = new Indexador();
                indexador.indexaArquivosDoDiretorio();
                System.out.println("Diretório vazio");
            } else {
                //LOGGER.info("Directory is not empty");
                System.out.println("Diretório não está vazio.");
            }

            Buscador buscar = new Buscador();
            String parametro = getJttextoconsulta().getText();
            if (buscar.buscaComParser(parametro).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Não foram encontrados documentos que satisfaçam a pesquisa.", "Consulta sem Retorno", JOptionPane.INFORMATION_MESSAGE);
                getJttextoconsulta().requestFocus();
                getJbLimpar().setEnabled(true);
            } else {
                setDocumentosEncontrados(buscar.buscaComParser(parametro));
                preencherRelatorio();
                getJbLimpar().setEnabled(true);
            }
        }
    }//GEN-LAST:event_jbconsultarActionPerformed

    /**
     * O método preencherRelatorio() preenche a tabela de interface do usuário.
     */
    public void preencherRelatorio() {
        DefaultTableModel model = (DefaultTableModel) getjTDocumentosRetornados().getModel();

        for (String documento : getDocumentosEncontrados()) {
            model.addRow(new Object[]{documento});
        }
    }

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limparTabela();
        getJttextoconsulta().setText("");
        getJbLimpar().setEnabled(false);
        getJbconsultar().setEnabled(true);

    }//GEN-LAST:event_jbLimparActionPerformed

    public void limparTabela() {
        DefaultTableModel dm = (DefaultTableModel) getjTDocumentosRetornados().getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPDoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTDocumentosRetornados;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbconsultar;
    private javax.swing.JLabel jlconsultadoc;
    private javax.swing.JLabel jldigitepc;
    private javax.swing.JTextField jttextoconsulta;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the documentosEncontrados
     */
    public ArrayList<String> getDocumentosEncontrados() {
        return documentosEncontrados;
    }

    /**
     * @param documentosEncontrados the documentosEncontrados to set
     */
    public void setDocumentosEncontrados(ArrayList<String> documentosEncontrados) {
        this.documentosEncontrados = documentosEncontrados;
    }

    /**
     * @return the JPDoc
     */
    public javax.swing.JPanel getJPDoc() {
        return JPDoc;
    }

    /**
     * @param JPDoc the JPDoc to set
     */
    public void setJPDoc(javax.swing.JPanel JPDoc) {
        this.JPDoc = JPDoc;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jTDocumentosRetornados
     */
    public javax.swing.JTable getjTDocumentosRetornados() {
        return jTDocumentosRetornados;
    }

    /**
     * @param jTDocumentosRetornados the jTDocumentosRetornados to set
     */
    public void setjTDocumentosRetornados(javax.swing.JTable jTDocumentosRetornados) {
        this.jTDocumentosRetornados = jTDocumentosRetornados;
    }

    /**
     * @return the jbLimpar
     */
    public javax.swing.JButton getJbLimpar() {
        return jbLimpar;
    }

    /**
     * @param jbLimpar the jbLimpar to set
     */
    public void setJbLimpar(javax.swing.JButton jbLimpar) {
        this.jbLimpar = jbLimpar;
    }

    /**
     * @return the jbconsultar
     */
    public javax.swing.JButton getJbconsultar() {
        return jbconsultar;
    }

    /**
     * @param jbconsultar the jbconsultar to set
     */
    public void setJbconsultar(javax.swing.JButton jbconsultar) {
        this.jbconsultar = jbconsultar;
    }

    /**
     * @return the jlconsultadoc
     */
    public javax.swing.JLabel getJlconsultadoc() {
        return jlconsultadoc;
    }

    /**
     * @param jlconsultadoc the jlconsultadoc to set
     */
    public void setJlconsultadoc(javax.swing.JLabel jlconsultadoc) {
        this.jlconsultadoc = jlconsultadoc;
    }

    /**
     * @return the jldigitepc
     */
    public javax.swing.JLabel getJldigitepc() {
        return jldigitepc;
    }

    /**
     * @param jldigitepc the jldigitepc to set
     */
    public void setJldigitepc(javax.swing.JLabel jldigitepc) {
        this.jldigitepc = jldigitepc;
    }

    /**
     * @return the jttextoconsulta
     */
    public javax.swing.JTextField getJttextoconsulta() {
        return jttextoconsulta;
    }

    /**
     * @param jttextoconsulta the jttextoconsulta to set
     */
    public void setJttextoconsulta(javax.swing.JTextField jttextoconsulta) {
        this.jttextoconsulta = jttextoconsulta;
    }
}
